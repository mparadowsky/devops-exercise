version: '3'

services:
  db:
    restart: on-failure
    image: 'postgres:latest'
    #env_file: .env
    environment:
      - POSTGRES_DB=${DATABASE_NAME} 
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USERNAME}
      #- POSTGRES_DB=blog_backend
      #- POSTGRES_PASSWORD=blog_backend
      #- POSTGRES_USER=blog_backend
    labels:
      - traefik.enable=true
      
  blog:
    restart: on-failure
    image: mparadowsky/blog:env
    ports:
      - '3000:3000'
    #env_file: .env
    # environment:
      # - PGDATABASE=${DATABASE_NAME} 
      # - PGPASSWORD=${DATABASE_PASSWORD}
      # - PGUSER=${DATABASE_USERNAME}
      # - PGHOST=${DATABASE_HOST}
      #- PGDATABASE=blog_backend
      #- PGPASSWORD=blog_backend
      #- PGUSER=blog_backend
      #- PGHOST=db
    labels:
      - traefik.enable=true
      - traefik.http.routers.blog.rule=Host("lvh.me")
      
  traefik:
    restart: on-failure
    image: 'traefik:latest'
    ports:
      - '80:80'
      - '8080:8080'
      - '443:443'
    command: --api.insecure=true --providers.docker
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock:ro
